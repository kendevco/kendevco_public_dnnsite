{"version":3,"sources":["js/accordions-tabs.js"],"names":["$","intervalSpeed","tabToToggle","animate","animationSpeed","snapTopTo","topOffset","currentIteration","pageAnchor","scrollTop","attr","scrollTo","$tabToToggle","tabState","slideToggle","wrapper","window","hash","defaultBreakpoint","defaultAnimationSpeed","$wrapper","clearInterval","allowMultiple","concat","makeTabPanel","isTabs","display","location","breakpoint","initialPanelHeight","$tabs","e","stopPropagation","alwaysShowOne","$tab","trigger","toggleTab","panelHeight","next","css","each","tabTitle","$element","originalTabId","text","replace","findInvalidAttributeCharacters","trim","index","tabId","length","substring","find","on","isOnLoad","$activeTab","this","$anchorTab","innerWidth","currentId","makeAccordion","currentTabIsActiveTab","fn","height","makeTabs","click","preventDefault","filter","$goToVal","is","jQuery"],"mappings":"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","file":"js\\accordions-tabs.min.js","sourcesContent":["/* global jQuery */\r\nvoid (function initializeAccordionsTabs($) {\r\n\t'use strict';\r\n\r\n\t// on click of any link that starts with a hash, if it is a tab, then change that tab\r\n\t$('a[href^=\"#\"]').on('click', function clickAnchor(e) {\r\n\t\tconst $goToVal = $($(this).attr('href'));\r\n\r\n\t\tif (!$goToVal.is('[role=tab]')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\r\n\t\t$goToVal.trigger('tab-change');\r\n\t});\r\n\r\n\tfunction createValidAttributeFromTitle(title) {\r\n\t\tconst findInvalidAttributeCharacters = /[^a-z0-9:.\\s]|^[^a-z\\s]+/gi;\r\n\t\tconst findMultipleSpaces = /\\s\\s+/g;\r\n\t\tconst findAllSpaces = /\\s/g;\r\n\r\n\t\treturn title\r\n\t\t\t.replace(findInvalidAttributeCharacters, '')\r\n\t\t\t.replace(findMultipleSpaces, ' ')\r\n\t\t\t.trim()\r\n\t\t\t.replace(findAllSpaces, '-');\r\n\t}\r\n\r\n\tfunction checkOrSetTabId($tabs) {\r\n\t\t$tabs.each((i, element) => {\r\n\t\t\tconst $element = $(element);\r\n\r\n\t\t\tif ($element.attr('id')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst tabTitle = $element.text();\r\n\t\t\tconst originalTabId = createValidAttributeFromTitle(tabTitle);\r\n\t\t\tlet tabId = `#${originalTabId}`;\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\twhile ($(tabId).length) {\r\n\t\t\t\ttabId = `#${originalTabId}${++index}`;\r\n\t\t\t}\r\n\r\n\t\t\t$element.attr('id', tabId.substring(1));\r\n\t\t});\r\n\t}\r\n\r\n\tfunction toggleTab(\r\n\t\ttabToToggle,\r\n\t\tanimate,\r\n\t\tanimationSpeed,\r\n\t\tsnapTopTo,\r\n\t\ttopOffset\r\n\t) {\r\n\t\tconst $tabToToggle = $(tabToToggle);\r\n\t\tconst tabState = $tabToToggle.attr('aria-expanded') === 'true';\r\n\r\n\t\t$tabToToggle\r\n\t\t\t.attr('aria-expanded', !tabState)\r\n\t\t\t.next('[role=\"tabpanel\"]') // find the tabpanel that it is associated with\r\n\t\t\t.attr('aria-hidden', tabState)\r\n\t\t\t.slideToggle(animate ? animationSpeed : 0);\r\n\r\n\t\tif (snapTopTo && animate) {\r\n\t\t\tconst intervalSpeed = 30;\r\n\t\t\tlet currentIteration = 0;\r\n\r\n\t\t\tconst animateScroll = setInterval(() => {\r\n\t\t\t\tif (currentIteration > animationSpeed / intervalSpeed + 1) {\r\n\t\t\t\t\tconst wrapperScroll =\r\n\t\t\t\t\t\tsnapTopTo === 'body' ? 0 : $(snapTopTo).scrollTop();\r\n\t\t\t\t\tconst scrollTo =\r\n\t\t\t\t\t\twrapperScroll + $tabToToggle.offset().top - topOffset;\r\n\t\t\t\t\tclearInterval(animateScroll);\r\n\t\t\t\t\t$(snapTopTo).animate({ scrollTop: `${scrollTo}px` });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentIteration++;\r\n\t\t\t}, intervalSpeed);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeTabPanel(wrapper, isTabs) {\r\n\t\tconst $wrapper = $(wrapper);\r\n\t\tconst $tabs = $('[role=\"tab\"]', $wrapper);\r\n\t\tconst pageAnchor = window.location.hash;\r\n\r\n\t\tconst defaultBreakpoint = 1170;\r\n\t\tconst breakpoint =\r\n\t\t\tparseInt($wrapper.attr('data-breakpoint'), 10) || defaultBreakpoint;\r\n\r\n\t\tconst defaultAnimationSpeed = 750;\r\n\t\tconst animationSpeed =\r\n\t\t\tparseInt($wrapper.attr('data-animation-speed'), 10) ||\r\n\t\t\tdefaultAnimationSpeed;\r\n\r\n\t\tconst alwaysShowOne =\r\n\t\t\tisTabs || $wrapper.attr('data-always-show-one') === 'true'\r\n\t\t\t\t? true\r\n\t\t\t\t: false;\r\n\r\n\t\tconst allowMultiple =\r\n\t\t\t$wrapper.attr('data-allow-multiple') === 'true' ? true : false;\r\n\t\tconst snapToTop =\r\n\t\t\t$wrapper.attr('data-snap-to-top') === 'true' ? true : false;\r\n\t\tconst snapTopTo = snapToTop\r\n\t\t\t? $wrapper.attr('data-snap-top-to')\r\n\t\t\t\t? $wrapper.attr('data-snap-top-to')\r\n\t\t\t\t: 'body'\r\n\t\t\t: false;\r\n\t\tconst topOffsetDefault = 30;\r\n\t\tconst topOffset = $wrapper.attr('data-top-offset')\r\n\t\t\t? $wrapper.attr('data-top-offset')\r\n\t\t\t: topOffsetDefault;\r\n\r\n\t\tcheckOrSetTabId($tabs);\r\n\r\n\t\t$wrapper.removeClass('no-js');\r\n\r\n\t\t$wrapper.find('> [aria-hidden=\"false\"]').css({ display: 'block' });\r\n\t\t$wrapper.find('> [aria-hidden=\"true\"]').css({ display: 'none' });\r\n\r\n\t\tif (isTabs) {\r\n\t\t\tconst initialPanelHeight = $wrapper\r\n\t\t\t\t.find('[aria-hidden=\"false\"]')\r\n\t\t\t\t.height();\r\n\r\n\t\t\t$wrapper.css('margin-bottom', `${initialPanelHeight}px`);\r\n\t\t}\r\n\r\n\t\t$tabs.on('tab-change', function changeTab(e, isOnLoad) {\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\tconst $activeTab = $wrapper.find('> [aria-expanded=\"true\"]');\r\n\t\t\tconst $tab = $(this);\r\n\t\t\tconst currentTabIsActiveTab = $tab[0] === $activeTab[0];\r\n\t\t\tconst animate = !(isTabs && $(window).innerWidth() > breakpoint);\r\n\t\t\tconst currentId = $tab.attr('id');\r\n\r\n\t\t\tif (alwaysShowOne && currentTabIsActiveTab) {\r\n\t\t\t\t// trigger tab-changed event, but pass false because nothing changed\r\n\t\t\t\t$tab.trigger('tab-changed', [false]);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t} else if (\r\n\t\t\t\t!currentTabIsActiveTab &&\r\n\t\t\t\t$activeTab.length > 0 &&\r\n\t\t\t\t!allowMultiple\r\n\t\t\t) {\r\n\t\t\t\ttoggleTab($activeTab, animate, animationSpeed);\r\n\t\t\t}\r\n\r\n\t\t\ttoggleTab($tab, animate, animationSpeed, snapTopTo, topOffset);\r\n\r\n\t\t\tif (!animate) {\r\n\t\t\t\tconst panelHeight = $tab.next('[role=\"tabpanel\"]').height();\r\n\r\n\t\t\t\t$wrapper.css('margin-bottom', `${panelHeight}px`);\r\n\t\t\t}\r\n\r\n\t\t\t// set hash but don't move the page\r\n\t\t\tif (!isOnLoad) {\r\n\t\t\t\t$tab.attr('id', '');\r\n\t\t\t\twindow.location.hash = currentId;\r\n\t\t\t\t$tab.attr('id', currentId);\r\n\t\t\t}\r\n\r\n\t\t\t// trigger tab-changed event when done\r\n\t\t\t$tab.trigger('tab-changed', [true]);\r\n\t\t});\r\n\r\n\t\t$tabs.click(function clickTab(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\t$(this).trigger('tab-change');\r\n\t\t});\r\n\r\n\t\tif (!pageAnchor) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst $anchorTab = $tabs.filter(pageAnchor);\r\n\t\t$anchorTab.trigger('tab-change', [true]);\r\n\t}\r\n\r\n\t$.fn.makeAccordion = function makeAccordion() {\r\n\t\treturn this.each((index, wrapper) => {\r\n\t\t\tconst $wrapper = $(wrapper);\r\n\r\n\t\t\tmakeTabPanel($wrapper);\r\n\r\n\t\t\t$wrapper.trigger('accordion-initialized');\r\n\t\t});\r\n\t};\r\n\r\n\t$.fn.makeTabs = function makeTabs() {\r\n\t\treturn this.each((index, wrapper) => {\r\n\t\t\tconst $wrapper = $(wrapper);\r\n\r\n\t\t\tmakeTabPanel($wrapper, true);\r\n\r\n\t\t\t$wrapper.trigger('tabs-initialized');\r\n\t\t});\r\n\t};\r\n\r\n\tvoid (function init() {\r\n\t\t$('[data-function=\"accordion\"]').makeAccordion();\r\n\t\t$('[data-function=\"tabs\"]').makeTabs();\r\n\t})();\r\n})(jQuery);\r\n"]}