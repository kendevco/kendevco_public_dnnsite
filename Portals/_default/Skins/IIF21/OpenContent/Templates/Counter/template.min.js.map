{"version":3,"sources":["OpenContent/Templates/Counter/template.js"],"names":["jQuery","$","initCounter","each","$this","this","$counterValue","find","countTo","attr","countTimingString","countTiming","parseFloat","countNum","text","animate","duration","easing","step","toLocaleString","Math","floor","counterAlreadyViewed","fn","isInViewport","elementTop","offset","top","elementBottom","outerHeight","viewportTop","window","scrollTop","viewportBottom","height","index","counterContainer","on"],"mappings":"AACAA,OAAO,SAAAC,gBAWN,SAAAC,IACCD,EAAAA,YAACE,KAAaA,WACb,IAAAC,EAAWH,EAAII,MACfC,EAAmBL,EAAII,MAADE,KAAA,kBACtBC,EAAaJ,EAAQK,KAAL,cAChBC,EAAuBN,EAAQK,KAAL,eAC1BE,EAAiBC,WAAaF,GAE1BG,EAAAA,CAAAA,SAAQP,EAAeQ,SAAbC,QAAZ,CAAAF,SAAFL,GACGK,CAAFG,SACAL,EACCK,OAAAA,SACAC,KAHCJ,WAIDK,EAHDJ,KAIER,KAAAA,MAAAA,KAAaO,UACRM,mBAILb,SAVAO,WAaAP,EAAAQ,KAdHM,KAAAC,MAAAhB,KAAAQ,UAAAM,uBAyBC,IAAAG,IAzCHrB,EAACsB,GAADC,aAAA,WACC,IAAMC,EAAaxB,EAAEI,MAAMqB,SAASC,IAC9BC,EAAgBH,EAAaxB,EAAEI,MAAMwB,cACrCC,EAAc7B,EAAE8B,QAAQC,YACxBC,EAAiBH,EAAc7B,EAAE8B,QAAQG,SAC/C,OAAoBJ,EAApBF,GAAOH,EAAyCQ,IAsC7CX,EAAAA,UAAAA,MAAAA,WACArB,EAAA,sBAAAE,KAAA,SAAAgC,EAAAC,GACDnC,EAAAmC,GAAAZ,iBANF,IAAAF,IADDpB,IAWE6B,GAAW,OAMT9B,EAAA8B,QAAAM,GAAA,gBAAA,WACDpC,EAAA,sBAAAE,KAAA,SAAAgC,EAAAC,GANFnC,EAAAmC,GAAAZ,iBADD,IAAAF,IApDDpB,IAyDKoB,GAAuB","file":"OpenContent\\Templates\\Counter\\template.min.js","sourcesContent":["/* global jQuery */\r\njQuery(($) => {\r\n\t'use strict';\r\n\r\n\t$.fn.isInViewport = function () {\r\n\t\tconst elementTop = $(this).offset().top;\r\n\t\tconst elementBottom = elementTop + $(this).outerHeight();\r\n\t\tconst viewportTop = $(window).scrollTop();\r\n\t\tconst viewportBottom = viewportTop + $(window).height();\r\n\t\treturn elementBottom > viewportTop && elementTop < viewportBottom;\r\n\t};\r\n\r\n\tfunction initCounter() {\r\n\t\t$('.counter').each(function () {\r\n\t\t\tconst $this = $(this);\r\n\t\t\tconst $counterValue = $(this).find('.counter--data');\r\n\t\t\tconst countTo = $this.attr('data-count');\r\n\t\t\tconst countTimingString = $this.attr('data-timing');\r\n\t\t\tconst countTiming = parseFloat(countTimingString);\r\n\r\n\t\t\t$({ countNum: $counterValue.text() }).animate(\r\n\t\t\t\t{ countNum: countTo },\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: countTiming,\r\n\t\t\t\t\teasing: 'linear',\r\n\t\t\t\t\tstep() {\r\n\t\t\t\t\t\t$counterValue.text(\r\n\t\t\t\t\t\t\tMath.floor(this.countNum).toLocaleString()\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete() {\r\n\t\t\t\t\t\t$counterValue.text(\r\n\t\t\t\t\t\t\tMath.floor(this.countNum).toLocaleString()\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tlet counterAlreadyViewed = false;\r\n\r\n\t$(document).ready(() => {\r\n\t\t$('.counter-container').each((index, counterContainer) => {\r\n\t\t\tif ($(counterContainer).isInViewport()) {\r\n\t\t\t\tif (counterAlreadyViewed === false) {\r\n\t\t\t\t\tinitCounter();\r\n\t\t\t\t\tcounterAlreadyViewed = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\t$(window).on('resize scroll', () => {\r\n\t\t$('.counter-container').each((index, counterContainer) => {\r\n\t\t\tif ($(counterContainer).isInViewport()) {\r\n\t\t\t\tif (counterAlreadyViewed === false) {\r\n\t\t\t\t\tinitCounter();\r\n\t\t\t\t\tcounterAlreadyViewed = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n"]}