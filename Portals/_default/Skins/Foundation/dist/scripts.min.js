!function(e,t,n,i){e.site=e.fn.site=function(i){var o,a,s=(new Date).getTime(),r=[],c=arguments[0],l="string"==typeof c,d=[].slice.call(arguments,1),u=e.isPlainObject(i)?e.extend(!0,{},e.site.settings,i):e.extend({},e.site.settings),v=u.namespace,p=u.error,m="module-"+v,f=e(n),g=this,h=f.data(m);return o={initialize:function(){o.instantiate()},instantiate:function(){o.verbose("Storing instance of site",o),h=o,f.data(m,o)},normalize:function(){o.fix.console(),o.fix.requestAnimationFrame()},fix:{console:function(){o.debug("Normalizing window.console"),void 0!==console&&void 0!==console.log||(o.verbose("Console not available, normalizing events"),o.disable.console()),void 0!==console.group&&void 0!==console.groupEnd&&void 0!==console.groupCollapsed||(o.verbose("Console group not available, normalizing events"),t.console.group=function(){},t.console.groupEnd=function(){},t.console.groupCollapsed=function(){}),void 0===console.markTimeline&&(o.verbose("Mark timeline not available, normalizing events"),t.console.markTimeline=function(){})},consoleClear:function(){o.debug("Disabling programmatic console clearing"),t.console.clear=function(){}},requestAnimationFrame:function(){o.debug("Normalizing requestAnimationFrame"),void 0===t.requestAnimationFrame&&(o.debug("RequestAnimationFrame not available, normalizing event"),t.requestAnimationFrame=t.requestAnimationFrame||t.mozRequestAnimationFrame||t.webkitRequestAnimationFrame||t.msRequestAnimationFrame||function(e){setTimeout(e,0)})}},moduleExists:function(t){return void 0!==e.fn[t]&&void 0!==e.fn[t].settings},enabled:{modules:function(t){var n=[];return t=t||u.modules,e.each(t,function(e,t){o.moduleExists(t)&&n.push(t)}),n}},disabled:{modules:function(t){var n=[];return t=t||u.modules,e.each(t,function(e,t){o.moduleExists(t)||n.push(t)}),n}},change:{setting:function(t,n,i,a){i="string"==typeof i?"all"===i?u.modules:[i]:i||u.modules,a=void 0===a||a,e.each(i,function(i,s){var r,c=!o.moduleExists(s)||e.fn[s].settings.namespace||!1;o.moduleExists(s)&&(o.verbose("Changing default setting",t,n,s),e.fn[s].settings[t]=n,a&&c&&(r=e(":data(module-"+c+")")).length>0&&(o.verbose("Modifying existing settings",r),r[s]("setting",t,n)))})},settings:function(t,n,i){n="string"==typeof n?[n]:n||u.modules,i=void 0===i||i,e.each(n,function(n,a){var s;o.moduleExists(a)&&(o.verbose("Changing default setting",t,a),e.extend(!0,e.fn[a].settings,t),i&&v&&(s=e(":data(module-"+v+")")).length>0&&(o.verbose("Modifying existing settings",s),s[a]("setting",t)))})}},enable:{console:function(){o.console(!0)},debug:function(e,t){e=e||u.modules,o.debug("Enabling debug for modules",e),o.change.setting("debug",!0,e,t)},verbose:function(e,t){e=e||u.modules,o.debug("Enabling verbose debug for modules",e),o.change.setting("verbose",!0,e,t)}},disable:{console:function(){o.console(!1)},debug:function(e,t){e=e||u.modules,o.debug("Disabling debug for modules",e),o.change.setting("debug",!1,e,t)},verbose:function(e,t){e=e||u.modules,o.debug("Disabling verbose debug for modules",e),o.change.setting("verbose",!1,e,t)}},console:function(e){if(e){if(void 0===h.cache.console)return void o.error(p.console);o.debug("Restoring console function"),t.console=h.cache.console}else o.debug("Disabling console function"),h.cache.console=t.console,t.console={clear:function(){},error:function(){},group:function(){},groupCollapsed:function(){},groupEnd:function(){},info:function(){},log:function(){},markTimeline:function(){},warn:function(){}}},destroy:function(){o.verbose("Destroying previous site for",f),f.removeData(m)},cache:{},setting:function(t,n){if(e.isPlainObject(t))e.extend(!0,u,t);else{if(void 0===n)return u[t];u[t]=n}},internal:function(t,n){if(e.isPlainObject(t))e.extend(!0,o,t);else{if(void 0===n)return o[t];o[t]=n}},debug:function(){u.debug&&(u.performance?o.performance.log(arguments):(o.debug=Function.prototype.bind.call(console.info,console,u.name+":"),o.debug.apply(console,arguments)))},verbose:function(){u.verbose&&u.debug&&(u.performance?o.performance.log(arguments):(o.verbose=Function.prototype.bind.call(console.info,console,u.name+":"),o.verbose.apply(console,arguments)))},error:function(){o.error=Function.prototype.bind.call(console.error,console,u.name+":"),o.error.apply(console,arguments)},performance:{log:function(e){var t,n;u.performance&&(n=(t=(new Date).getTime())-(s||t),s=t,r.push({Element:g,Name:e[0],Arguments:[].slice.call(e,1)||"","Execution Time":n})),clearTimeout(o.performance.timer),o.performance.timer=setTimeout(o.performance.display,500)},display:function(){var t=u.name+":",n=0;s=!1,clearTimeout(o.performance.timer),e.each(r,function(e,t){n+=t["Execution Time"]}),t+=" "+n+"ms",(void 0!==console.group||void 0!==console.table)&&r.length>0&&(console.groupCollapsed(t),console.table?console.table(r):e.each(r,function(e,t){console.log(t.Name+": "+t["Execution Time"]+"ms")}),console.groupEnd()),r=[]}},invoke:function(t,n,i){var s,r,c,l=h;return n=n||d,i=g||i,"string"==typeof t&&void 0!==l&&(t=t.split(/[\. ]/),s=t.length-1,e.each(t,function(n,i){var a=n!=s?i+t[n+1].charAt(0).toUpperCase()+t[n+1].slice(1):t;if(e.isPlainObject(l[a])&&n!=s)l=l[a];else{if(void 0!==l[a])return r=l[a],!1;if(!e.isPlainObject(l[i])||n==s)return void 0!==l[i]?(r=l[i],!1):(o.error(p.method,t),!1);l=l[i]}})),e.isFunction(r)?c=r.apply(i,n):void 0!==r&&(c=r),e.isArray(a)?a.push(c):void 0!==a?a=[a,c]:void 0!==c&&(a=c),r}},l?(void 0===h&&o.initialize(),o.invoke(c)):(void 0!==h&&o.destroy(),o.initialize()),void 0!==a?a:this},e.site.settings={name:"Site",namespace:"site",error:{console:"Console cannot be restored, most likely it was overwritten outside of module",method:"The method you called is not defined."},debug:!1,verbose:!1,performance:!0,modules:["accordion","api","checkbox","dimmer","dropdown","embed","form","modal","nag","popup","rating","shape","sidebar","state","sticky","tab","transition","visit","visibility"],siteNamespace:"site",namespaceStub:{cache:{},config:{},sections:{},section:{},utilities:{}}},e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,i){return!!e.data(t,i[3])}})}(jQuery,window,document),function(e,t,n,i){"use strict";t=void 0!==t&&t.Math==Math?t:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),e.fn.visibility=function(i){var o,a=e(this),s=a.selector||"",r=(new Date).getTime(),c=[],l=arguments[0],d="string"==typeof l,u=[].slice.call(arguments,1),v=a.length,p=0;return a.each(function(){var a,m,f,g,h=e.isPlainObject(i)?e.extend(!0,{},e.fn.visibility.settings,i):e.extend({},e.fn.visibility.settings),b=h.className,y=h.namespace,x=h.error,C=h.metadata,S="."+y,P="module-"+y,w=e(t),T=e(this),k=e(h.context),A=(T.selector,T.data(P)),N=t.requestAnimationFrame||t.mozRequestAnimationFrame||t.webkitRequestAnimationFrame||t.msRequestAnimationFrame||function(e){setTimeout(e,0)},E=this,M=!1;g={initialize:function(){g.debug("Initializing",h),g.setup.cache(),g.should.trackChanges()&&("image"==h.type&&g.setup.image(),"fixed"==h.type&&g.setup.fixed(),h.observeChanges&&g.observeChanges(),g.bind.events()),g.save.position(),g.is.visible()||g.error(x.visible,T),h.initialCheck&&g.checkVisibility(),g.instantiate()},instantiate:function(){g.debug("Storing instance",g),T.data(P,g),A=g},destroy:function(){g.verbose("Destroying previous module"),f&&f.disconnect(),m&&m.disconnect(),w.off("load"+S,g.event.load).off("resize"+S,g.event.resize),k.off("scroll"+S,g.event.scroll).off("scrollchange"+S,g.event.scrollchange),"fixed"==h.type&&(g.resetFixed(),g.remove.placeholder()),T.off(S).removeData(P)},observeChanges:function(){"MutationObserver"in t&&(m=new MutationObserver(g.event.contextChanged),f=new MutationObserver(g.event.changed),m.observe(n,{childList:!0,subtree:!0}),f.observe(E,{childList:!0,subtree:!0}),g.debug("Setting up mutation observer",f))},bind:{events:function(){g.verbose("Binding visibility events to scroll and resize"),h.refreshOnLoad&&w.on("load"+S,g.event.load),w.on("resize"+S,g.event.resize),k.off("scroll"+S).on("scroll"+S,g.event.scroll).on("scrollchange"+S,g.event.scrollchange)}},event:{changed:function(e){g.verbose("DOM tree modified, updating visibility calculations"),g.timer=setTimeout(function(){g.verbose("DOM tree modified, updating sticky menu"),g.refresh()},100)},contextChanged:function(t){[].forEach.call(t,function(t){t.removedNodes&&[].forEach.call(t.removedNodes,function(t){(t==E||e(t).find(E).length>0)&&(g.debug("Element removed from DOM, tearing down events"),g.destroy())})})},resize:function(){g.debug("Window resized"),h.refreshOnResize&&N(g.refresh)},load:function(){g.debug("Page finished loading"),N(g.refresh)},scroll:function(){h.throttle?(clearTimeout(g.timer),g.timer=setTimeout(function(){k.triggerHandler("scrollchange"+S,[k.scrollTop()])},h.throttle)):N(function(){k.triggerHandler("scrollchange"+S,[k.scrollTop()])})},scrollchange:function(e,t){g.checkVisibility(t)}},precache:function(t,i){t instanceof Array||(t=[t]);for(var o=t.length,a=0,s=[],r=n.createElement("img"),c=function(){++a>=t.length&&e.isFunction(i)&&i()};o--;)(r=n.createElement("img")).onload=c,r.onerror=c,r.src=t[o],s.push(r)},enableCallbacks:function(){g.debug("Allowing callbacks to occur"),M=!1},disableCallbacks:function(){g.debug("Disabling all callbacks temporarily"),M=!0},should:{trackChanges:function(){return d?(g.debug("One time query, no need to bind events"),!1):(g.debug("Callbacks being attached"),!0)}},setup:{cache:function(){g.cache={occurred:{},screen:{},element:{}}},image:function(){var e=T.data(C.src);e&&(g.verbose("Lazy loading image",e),h.once=!0,h.observeChanges=!1,h.onOnScreen=function(){g.debug("Image on screen",E),g.precache(e,function(){g.set.image(e,function(){++p==v&&h.onAllLoaded.call(this),h.onLoad.call(this)})})})},fixed:function(){g.debug("Setting up fixed"),h.once=!1,h.observeChanges=!1,h.initialCheck=!0,h.refreshOnLoad=!0,i.transition||(h.transition=!1),g.create.placeholder(),g.debug("Added placeholder",a),h.onTopPassed=function(){g.debug("Element passed, adding fixed position",T),g.show.placeholder(),g.set.fixed(),h.transition&&void 0!==e.fn.transition&&T.transition(h.transition,h.duration)},h.onTopPassedReverse=function(){g.debug("Element returned to position, removing fixed",T),g.hide.placeholder(),g.remove.fixed()}}},create:{placeholder:function(){g.verbose("Creating fixed position placeholder"),a=T.clone(!1).css("display","none").addClass(b.placeholder).insertAfter(T)}},show:{placeholder:function(){g.verbose("Showing placeholder"),a.css("display","block").css("visibility","hidden")}},hide:{placeholder:function(){g.verbose("Hiding placeholder"),a.css("display","none").css("visibility","")}},set:{fixed:function(){g.verbose("Setting element to fixed position"),T.addClass(b.fixed).css({position:"fixed",top:h.offset+"px",left:"auto",zIndex:h.zIndex}),h.onFixed.call(E)},image:function(t,n){if(T.attr("src",t),h.transition)if(void 0!==e.fn.transition){if(T.hasClass(b.visible))return void g.debug("Transition already occurred on this image, skipping animation");T.transition(h.transition,h.duration,n)}else T.fadeIn(h.duration,n);else T.show()}},is:{onScreen:function(){return g.get.elementCalculations().onScreen},offScreen:function(){return g.get.elementCalculations().offScreen},visible:function(){return!(!g.cache||!g.cache.element||0===g.cache.element.width&&0===g.cache.element.offset.top)},verticallyScrollableContext:function(){var e=k.get(0)!==t&&k.css("overflow-y");return"auto"==e||"scroll"==e},horizontallyScrollableContext:function(){var e=k.get(0)!==t&&k.css("overflow-x");return"auto"==e||"scroll"==e}},refresh:function(){g.debug("Refreshing constants (width/height)"),"fixed"==h.type&&g.resetFixed(),g.reset(),g.save.position(),h.checkOnRefresh&&g.checkVisibility(),h.onRefresh.call(E)},resetFixed:function(){g.remove.fixed(),g.remove.occurred()},reset:function(){g.verbose("Resetting all cached values"),e.isPlainObject(g.cache)&&(g.cache.screen={},g.cache.element={})},checkVisibility:function(e){g.verbose("Checking visibility of element",g.cache.element),!M&&g.is.visible()&&(g.save.scroll(e),g.save.calculations(),g.passed(),g.passingReverse(),g.topVisibleReverse(),g.bottomVisibleReverse(),g.topPassedReverse(),g.bottomPassedReverse(),g.onScreen(),g.offScreen(),g.passing(),g.topVisible(),g.bottomVisible(),g.topPassed(),g.bottomPassed(),h.onUpdate&&h.onUpdate.call(E,g.get.elementCalculations()))},passed:function(t,n){var i=g.get.elementCalculations();if(t&&n)h.onPassed[t]=n;else{if(void 0!==t)return g.get.pixelsPassed(t)>i.pixelsPassed;i.passing&&e.each(h.onPassed,function(e,t){i.bottomVisible||i.pixelsPassed>g.get.pixelsPassed(e)?g.execute(t,e):h.once||g.remove.occurred(t)})}},onScreen:function(e){var t=g.get.elementCalculations(),n=e||h.onOnScreen;if(e&&(g.debug("Adding callback for onScreen",e),h.onOnScreen=e),t.onScreen?g.execute(n,"onScreen"):h.once||g.remove.occurred("onScreen"),void 0!==e)return t.onOnScreen},offScreen:function(e){var t=g.get.elementCalculations(),n=e||h.onOffScreen;if(e&&(g.debug("Adding callback for offScreen",e),h.onOffScreen=e),t.offScreen?g.execute(n,"offScreen"):h.once||g.remove.occurred("offScreen"),void 0!==e)return t.onOffScreen},passing:function(e){var t=g.get.elementCalculations(),n=e||h.onPassing;if(e&&(g.debug("Adding callback for passing",e),h.onPassing=e),t.passing?g.execute(n,"passing"):h.once||g.remove.occurred("passing"),void 0!==e)return t.passing},topVisible:function(e){var t=g.get.elementCalculations(),n=e||h.onTopVisible;if(e&&(g.debug("Adding callback for top visible",e),h.onTopVisible=e),t.topVisible?g.execute(n,"topVisible"):h.once||g.remove.occurred("topVisible"),void 0===e)return t.topVisible},bottomVisible:function(e){var t=g.get.elementCalculations(),n=e||h.onBottomVisible;if(e&&(g.debug("Adding callback for bottom visible",e),h.onBottomVisible=e),t.bottomVisible?g.execute(n,"bottomVisible"):h.once||g.remove.occurred("bottomVisible"),void 0===e)return t.bottomVisible},topPassed:function(e){var t=g.get.elementCalculations(),n=e||h.onTopPassed;if(e&&(g.debug("Adding callback for top passed",e),h.onTopPassed=e),t.topPassed?g.execute(n,"topPassed"):h.once||g.remove.occurred("topPassed"),void 0===e)return t.topPassed},bottomPassed:function(e){var t=g.get.elementCalculations(),n=e||h.onBottomPassed;if(e&&(g.debug("Adding callback for bottom passed",e),h.onBottomPassed=e),t.bottomPassed?g.execute(n,"bottomPassed"):h.once||g.remove.occurred("bottomPassed"),void 0===e)return t.bottomPassed},passingReverse:function(e){var t=g.get.elementCalculations(),n=e||h.onPassingReverse;if(e&&(g.debug("Adding callback for passing reverse",e),h.onPassingReverse=e),t.passing?h.once||g.remove.occurred("passingReverse"):g.get.occurred("passing")&&g.execute(n,"passingReverse"),void 0!==e)return!t.passing},topVisibleReverse:function(e){var t=g.get.elementCalculations(),n=e||h.onTopVisibleReverse;if(e&&(g.debug("Adding callback for top visible reverse",e),h.onTopVisibleReverse=e),t.topVisible?h.once||g.remove.occurred("topVisibleReverse"):g.get.occurred("topVisible")&&g.execute(n,"topVisibleReverse"),void 0===e)return!t.topVisible},bottomVisibleReverse:function(e){var t=g.get.elementCalculations(),n=e||h.onBottomVisibleReverse;if(e&&(g.debug("Adding callback for bottom visible reverse",e),h.onBottomVisibleReverse=e),t.bottomVisible?h.once||g.remove.occurred("bottomVisibleReverse"):g.get.occurred("bottomVisible")&&g.execute(n,"bottomVisibleReverse"),void 0===e)return!t.bottomVisible},topPassedReverse:function(e){var t=g.get.elementCalculations(),n=e||h.onTopPassedReverse;if(e&&(g.debug("Adding callback for top passed reverse",e),h.onTopPassedReverse=e),t.topPassed?h.once||g.remove.occurred("topPassedReverse"):g.get.occurred("topPassed")&&g.execute(n,"topPassedReverse"),void 0===e)return!t.onTopPassed},bottomPassedReverse:function(e){var t=g.get.elementCalculations(),n=e||h.onBottomPassedReverse;if(e&&(g.debug("Adding callback for bottom passed reverse",e),h.onBottomPassedReverse=e),t.bottomPassed?h.once||g.remove.occurred("bottomPassedReverse"):g.get.occurred("bottomPassed")&&g.execute(n,"bottomPassedReverse"),void 0===e)return!t.bottomPassed},execute:function(e,t){var n=g.get.elementCalculations(),i=g.get.screenCalculations();(e=e||!1)&&(h.continuous?(g.debug("Callback being called continuously",t,n),e.call(E,n,i)):g.get.occurred(t)||(g.debug("Conditions met",t,n),e.call(E,n,i))),g.save.occurred(t)},remove:{fixed:function(){g.debug("Removing fixed position"),T.removeClass(b.fixed).css({position:"",top:"",left:"",zIndex:""}),h.onUnfixed.call(E)},placeholder:function(){g.debug("Removing placeholder content"),a&&a.remove()},occurred:function(e){if(e){var t=g.cache.occurred;void 0!==t[e]&&!0===t[e]&&(g.debug("Callback can now be called again",e),g.cache.occurred[e]=!1)}else g.cache.occurred={}}},save:{calculations:function(){g.verbose("Saving all calculations necessary to determine positioning"),g.save.direction(),g.save.screenCalculations(),g.save.elementCalculations()},occurred:function(e){e&&(void 0!==g.cache.occurred[e]&&!0===g.cache.occurred[e]||(g.verbose("Saving callback occurred",e),g.cache.occurred[e]=!0))},scroll:function(e){e=e+h.offset||k.scrollTop()+h.offset,g.cache.scroll=e},direction:function(){var e,t=g.get.scroll(),n=g.get.lastScroll();return e=t>n&&n?"down":t<n&&n?"up":"static",g.cache.direction=e,g.cache.direction},elementPosition:function(){var e=g.cache.element,t=g.get.screenSize();return g.verbose("Saving element position"),e.fits=e.height<t.height,e.offset=T.offset(),e.width=T.outerWidth(),e.height=T.outerHeight(),g.is.verticallyScrollableContext()&&(e.offset.top+=k.scrollTop()-k.offset().top),g.is.horizontallyScrollableContext()&&(e.offset.left+=k.scrollLeft-k.offset().left),g.cache.element=e,e},elementCalculations:function(){var e=g.get.screenCalculations(),t=g.get.elementPosition();return h.includeMargin?(t.margin={},t.margin.top=parseInt(T.css("margin-top"),10),t.margin.bottom=parseInt(T.css("margin-bottom"),10),t.top=t.offset.top-t.margin.top,t.bottom=t.offset.top+t.height+t.margin.bottom):(t.top=t.offset.top,t.bottom=t.offset.top+t.height),t.topPassed=e.top>=t.top,t.bottomPassed=e.top>=t.bottom,t.topVisible=e.bottom>=t.top&&!t.bottomPassed,t.bottomVisible=e.bottom>=t.bottom&&!t.topPassed,t.pixelsPassed=0,t.percentagePassed=0,t.onScreen=t.topVisible&&!t.bottomPassed,t.passing=t.topPassed&&!t.bottomPassed,t.offScreen=!t.onScreen,t.passing&&(t.pixelsPassed=e.top-t.top,t.percentagePassed=(e.top-t.top)/t.height),g.cache.element=t,g.verbose("Updated element calculations",t),t},screenCalculations:function(){var e=g.get.scroll();return g.save.direction(),g.cache.screen.top=e,g.cache.screen.bottom=e+g.cache.screen.height,g.cache.screen},screenSize:function(){g.verbose("Saving window position"),g.cache.screen={height:k.height()}},position:function(){g.save.screenSize(),g.save.elementPosition()}},get:{pixelsPassed:function(e){var t=g.get.elementCalculations();return e.search("%")>-1?t.height*(parseInt(e,10)/100):parseInt(e,10)},occurred:function(e){return void 0!==g.cache.occurred&&(g.cache.occurred[e]||!1)},direction:function(){return void 0===g.cache.direction&&g.save.direction(),g.cache.direction},elementPosition:function(){return void 0===g.cache.element&&g.save.elementPosition(),g.cache.element},elementCalculations:function(){return void 0===g.cache.element&&g.save.elementCalculations(),g.cache.element},screenCalculations:function(){return void 0===g.cache.screen&&g.save.screenCalculations(),g.cache.screen},screenSize:function(){return void 0===g.cache.screen&&g.save.screenSize(),g.cache.screen},scroll:function(){return void 0===g.cache.scroll&&g.save.scroll(),g.cache.scroll},lastScroll:function(){return void 0===g.cache.screen?(g.debug("First scroll event, no last scroll could be found"),!1):g.cache.screen.top}},setting:function(t,n){if(e.isPlainObject(t))e.extend(!0,h,t);else{if(void 0===n)return h[t];h[t]=n}},internal:function(t,n){if(e.isPlainObject(t))e.extend(!0,g,t);else{if(void 0===n)return g[t];g[t]=n}},debug:function(){!h.silent&&h.debug&&(h.performance?g.performance.log(arguments):(g.debug=Function.prototype.bind.call(console.info,console,h.name+":"),g.debug.apply(console,arguments)))},verbose:function(){!h.silent&&h.verbose&&h.debug&&(h.performance?g.performance.log(arguments):(g.verbose=Function.prototype.bind.call(console.info,console,h.name+":"),g.verbose.apply(console,arguments)))},error:function(){h.silent||(g.error=Function.prototype.bind.call(console.error,console,h.name+":"),g.error.apply(console,arguments))},performance:{log:function(e){var t,n;h.performance&&(n=(t=(new Date).getTime())-(r||t),r=t,c.push({Name:e[0],Arguments:[].slice.call(e,1)||"",Element:E,"Execution Time":n})),clearTimeout(g.performance.timer),g.performance.timer=setTimeout(g.performance.display,500)},display:function(){var t=h.name+":",n=0;r=!1,clearTimeout(g.performance.timer),e.each(c,function(e,t){n+=t["Execution Time"]}),t+=" "+n+"ms",s&&(t+=" '"+s+"'"),(void 0!==console.group||void 0!==console.table)&&c.length>0&&(console.groupCollapsed(t),console.table?console.table(c):e.each(c,function(e,t){console.log(t.Name+": "+t["Execution Time"]+"ms")}),console.groupEnd()),c=[]}},invoke:function(t,n,i){var a,s,r,c=A;return n=n||u,i=E||i,"string"==typeof t&&void 0!==c&&(t=t.split(/[\. ]/),a=t.length-1,e.each(t,function(n,i){var o=n!=a?i+t[n+1].charAt(0).toUpperCase()+t[n+1].slice(1):t;if(e.isPlainObject(c[o])&&n!=a)c=c[o];else{if(void 0!==c[o])return s=c[o],!1;if(!e.isPlainObject(c[i])||n==a)return void 0!==c[i]?(s=c[i],!1):(g.error(x.method,t),!1);c=c[i]}})),e.isFunction(s)?r=s.apply(i,n):void 0!==s&&(r=s),e.isArray(o)?o.push(r):void 0!==o?o=[o,r]:void 0!==r&&(o=r),s}},d?(void 0===A&&g.initialize(),A.save.scroll(),A.save.calculations(),g.invoke(l)):(void 0!==A&&A.invoke("destroy"),g.initialize())}),void 0!==o?o:this},e.fn.visibility.settings={name:"Visibility",namespace:"visibility",debug:!1,verbose:!1,performance:!0,observeChanges:!0,initialCheck:!0,refreshOnLoad:!0,refreshOnResize:!0,checkOnRefresh:!0,once:!0,continuous:!1,offset:0,includeMargin:!1,context:t,throttle:!1,type:!1,zIndex:"10",transition:"fade in",duration:1e3,onPassed:{},onOnScreen:!1,onOffScreen:!1,onPassing:!1,onTopVisible:!1,onBottomVisible:!1,onTopPassed:!1,onBottomPassed:!1,onPassingReverse:!1,onTopVisibleReverse:!1,onBottomVisibleReverse:!1,onTopPassedReverse:!1,onBottomPassedReverse:!1,onLoad:function(){},onAllLoaded:function(){},onFixed:function(){},onUnfixed:function(){},onUpdate:!1,onRefresh:function(){},metadata:{src:"src"},className:{fixed:"fixed",placeholder:"placeholder",visible:"visible"},error:{method:"The method you called is not defined.",visible:"Element is hidden, you must call refresh after element becomes visible"}}}(jQuery,window,document),function(e){var t=!0;e.flexslider=function(n,i){var o=e(n);o.vars=e.extend({},e.flexslider.defaults,i);var a,s=o.vars.namespace,r=window.navigator&&window.navigator.msPointerEnabled&&window.MSGesture,c=("ontouchstart"in window||r||window.DocumentTouch&&document instanceof DocumentTouch)&&o.vars.touch,l="click touchend MSPointerUp keyup",d="",u="vertical"===o.vars.direction,v=o.vars.reverse,p=o.vars.itemWidth>0,m="fade"===o.vars.animation,f=""!==o.vars.asNavFor,g={};e.data(n,"flexslider",o),g={init:function(){o.animating=!1,o.currentSlide=parseInt(o.vars.startAt?o.vars.startAt:0,10),isNaN(o.currentSlide)&&(o.currentSlide=0),o.animatingTo=o.currentSlide,o.atEnd=0===o.currentSlide||o.currentSlide===o.last,o.containerSelector=o.vars.selector.substr(0,o.vars.selector.search(" ")),o.slides=e(o.vars.selector,o),o.container=e(o.containerSelector,o),o.count=o.slides.length,o.syncExists=e(o.vars.sync).length>0,"slide"===o.vars.animation&&(o.vars.animation="swing"),o.prop=u?"top":"marginLeft",o.args={},o.manualPause=!1,o.stopped=!1,o.started=!1,o.startTimeout=null,o.transitions=!o.vars.video&&!m&&o.vars.useCSS&&function(){var e=document.createElement("div"),t=["perspectiveProperty","WebkitPerspective","MozPerspective","OPerspective","msPerspective"];for(var n in t)if(void 0!==e.style[t[n]])return o.pfx=t[n].replace("Perspective","").toLowerCase(),o.prop="-"+o.pfx+"-transform",!0;return!1}(),o.ensureAnimationEnd="",""!==o.vars.controlsContainer&&(o.controlsContainer=e(o.vars.controlsContainer).length>0&&e(o.vars.controlsContainer)),""!==o.vars.manualControls&&(o.manualControls=e(o.vars.manualControls).length>0&&e(o.vars.manualControls)),""!==o.vars.customDirectionNav&&(o.customDirectionNav=2===e(o.vars.customDirectionNav).length&&e(o.vars.customDirectionNav)),o.vars.randomize&&(o.slides.sort(function(){return Math.round(Math.random())-.5}),o.container.empty().append(o.slides)),o.doMath(),o.setup("init"),o.vars.controlNav&&g.controlNav.setup(),o.vars.directionNav&&g.directionNav.setup(),o.vars.keyboard&&(1===e(o.containerSelector).length||o.vars.multipleKeyboard)&&e(document).bind("keyup",function(e){var t=e.keyCode;if(!o.animating&&(39===t||37===t)){var n=39===t?o.getTarget("next"):37===t&&o.getTarget("prev");o.flexAnimate(n,o.vars.pauseOnAction)}}),o.vars.mousewheel&&o.bind("mousewheel",function(e,t,n,i){e.preventDefault();var a=t<0?o.getTarget("next"):o.getTarget("prev");o.flexAnimate(a,o.vars.pauseOnAction)}),o.vars.pausePlay&&g.pausePlay.setup(),o.vars.slideshow&&o.vars.pauseInvisible&&g.pauseInvisible.init(),o.vars.slideshow&&(o.vars.pauseOnHover&&o.hover(function(){o.manualPlay||o.manualPause||o.pause()},function(){o.manualPause||o.manualPlay||o.stopped||o.play()}),o.vars.pauseInvisible&&g.pauseInvisible.isHidden()||(o.vars.initDelay>0?o.startTimeout=setTimeout(o.play,o.vars.initDelay):o.play())),f&&g.asNav.setup(),c&&o.vars.touch&&g.touch(),(!m||m&&o.vars.smoothHeight)&&e(window).bind("resize orientationchange focus",g.resize),o.find("img").attr("draggable","false"),setTimeout(function(){o.vars.start(o)},200)},asNav:{setup:function(){o.asNav=!0,o.animatingTo=Math.floor(o.currentSlide/o.move),o.currentItem=o.currentSlide,o.slides.removeClass(s+"active-slide").eq(o.currentItem).addClass(s+"active-slide"),r?(n._slider=o,o.slides.each(function(){var t=this;t._gesture=new MSGesture,t._gesture.target=t,t.addEventListener("MSPointerDown",function(e){e.preventDefault(),e.currentTarget._gesture&&e.currentTarget._gesture.addPointer(e.pointerId)},!1),t.addEventListener("MSGestureTap",function(t){t.preventDefault();var n=e(this),i=n.index();e(o.vars.asNavFor).data("flexslider").animating||n.hasClass("active")||(o.direction=o.currentItem<i?"next":"prev",o.flexAnimate(i,o.vars.pauseOnAction,!1,!0,!0))})})):o.slides.on(l,function(t){t.preventDefault();var n=e(this),i=n.index();n.offset().left-e(o).scrollLeft()<=0&&n.hasClass(s+"active-slide")?o.flexAnimate(o.getTarget("prev"),!0):e(o.vars.asNavFor).data("flexslider").animating||n.hasClass(s+"active-slide")||(o.direction=o.currentItem<i?"next":"prev",o.flexAnimate(i,o.vars.pauseOnAction,!1,!0,!0))})}},controlNav:{setup:function(){o.manualControls?g.controlNav.setupManual():g.controlNav.setupPaging()},setupPaging:function(){var t,n,i="thumbnails"===o.vars.controlNav?"control-thumbs":"control-paging",a=1;if(o.controlNavScaffold=e('<ol class="'+s+"control-nav "+s+i+'"></ol>'),o.pagingCount>1)for(var r=0;r<o.pagingCount;r++){void 0===(n=o.slides.eq(r)).attr("data-thumb-alt")&&n.attr("data-thumb-alt","");var c=""!==n.attr("data-thumb-alt")?c=' alt="'+n.attr("data-thumb-alt")+'"':"";if(t="thumbnails"===o.vars.controlNav?'<img src="'+n.attr("data-thumb")+'"'+c+"/>":'<a href="#">'+a+"</a>","thumbnails"===o.vars.controlNav&&!0===o.vars.thumbCaptions){var u=n.attr("data-thumbcaption");""!==u&&void 0!==u&&(t+='<span class="'+s+'caption">'+u+"</span>")}o.controlNavScaffold.append("<li>"+t+"</li>"),a++}o.controlsContainer?e(o.controlsContainer).append(o.controlNavScaffold):o.append(o.controlNavScaffold),g.controlNav.set(),g.controlNav.active(),o.controlNavScaffold.delegate("a, img",l,function(t){if(t.preventDefault(),""===d||d===t.type){var n=e(this),i=o.controlNav.index(n);n.hasClass(s+"active")||(o.direction=i>o.currentSlide?"next":"prev",o.flexAnimate(i,o.vars.pauseOnAction))}""===d&&(d=t.type),g.setToClearWatchedEvent()})},setupManual:function(){o.controlNav=o.manualControls,g.controlNav.active(),o.controlNav.bind(l,function(t){if(t.preventDefault(),""===d||d===t.type){var n=e(this),i=o.controlNav.index(n);n.hasClass(s+"active")||(i>o.currentSlide?o.direction="next":o.direction="prev",o.flexAnimate(i,o.vars.pauseOnAction))}""===d&&(d=t.type),g.setToClearWatchedEvent()})},set:function(){var t="thumbnails"===o.vars.controlNav?"img":"a";o.controlNav=e("."+s+"control-nav li "+t,o.controlsContainer?o.controlsContainer:o)},active:function(){o.controlNav.removeClass(s+"active").eq(o.animatingTo).addClass(s+"active")},update:function(t,n){o.pagingCount>1&&"add"===t?o.controlNavScaffold.append(e('<li><a href="#">'+o.count+"</a></li>")):1===o.pagingCount?o.controlNavScaffold.find("li").remove():o.controlNav.eq(n).closest("li").remove(),g.controlNav.set(),o.pagingCount>1&&o.pagingCount!==o.controlNav.length?o.update(n,t):g.controlNav.active()}},directionNav:{setup:function(){var t=e('<ul class="'+s+'direction-nav"><li class="'+s+'nav-prev"><a class="'+s+'prev" href="#">'+o.vars.prevText+'</a></li><li class="'+s+'nav-next"><a class="'+s+'next" href="#">'+o.vars.nextText+"</a></li></ul>");o.customDirectionNav?o.directionNav=o.customDirectionNav:o.controlsContainer?(e(o.controlsContainer).append(t),o.directionNav=e("."+s+"direction-nav li a",o.controlsContainer)):(o.append(t),o.directionNav=e("."+s+"direction-nav li a",o)),g.directionNav.update(),o.directionNav.bind(l,function(t){t.preventDefault();var n;""!==d&&d!==t.type||(n=e(this).hasClass(s+"next")?o.getTarget("next"):o.getTarget("prev"),o.flexAnimate(n,o.vars.pauseOnAction)),""===d&&(d=t.type),g.setToClearWatchedEvent()})},update:function(){var e=s+"disabled";1===o.pagingCount?o.directionNav.addClass(e).attr("tabindex","-1"):o.vars.animationLoop?o.directionNav.removeClass(e).removeAttr("tabindex"):0===o.animatingTo?o.directionNav.removeClass(e).filter("."+s+"prev").addClass(e).attr("tabindex","-1"):o.animatingTo===o.last?o.directionNav.removeClass(e).filter("."+s+"next").addClass(e).attr("tabindex","-1"):o.directionNav.removeClass(e).removeAttr("tabindex")}},pausePlay:{setup:function(){var t=e('<div class="'+s+'pauseplay"><a href="#"></a></div>');o.controlsContainer?(o.controlsContainer.append(t),o.pausePlay=e("."+s+"pauseplay a",o.controlsContainer)):(o.append(t),o.pausePlay=e("."+s+"pauseplay a",o)),g.pausePlay.update(o.vars.slideshow?s+"pause":s+"play"),o.pausePlay.bind(l,function(t){t.preventDefault(),""!==d&&d!==t.type||(e(this).hasClass(s+"pause")?(o.manualPause=!0,o.manualPlay=!1,o.pause()):(o.manualPause=!1,o.manualPlay=!0,o.play())),""===d&&(d=t.type),g.setToClearWatchedEvent()})},update:function(e){"play"===e?o.pausePlay.removeClass(s+"pause").addClass(s+"play").html(o.vars.playText):o.pausePlay.removeClass(s+"play").addClass(s+"pause").html(o.vars.pauseText)}},touch:function(){var e,t,i,a,s,c,l,d,f,g=!1,h=0,b=0,y=0;r?(n.style.msTouchAction="none",n._gesture=new MSGesture,n._gesture.target=n,n.addEventListener("MSPointerDown",function(e){e.stopPropagation(),o.animating?e.preventDefault():(o.pause(),n._gesture.addPointer(e.pointerId),y=0,a=u?o.h:o.w,c=Number(new Date),i=p&&v&&o.animatingTo===o.last?0:p&&v?o.limit-(o.itemW+o.vars.itemMargin)*o.move*o.animatingTo:p&&o.currentSlide===o.last?o.limit:p?(o.itemW+o.vars.itemMargin)*o.move*o.currentSlide:v?(o.last-o.currentSlide+o.cloneOffset)*a:(o.currentSlide+o.cloneOffset)*a)},!1),n._slider=o,n.addEventListener("MSGestureChange",function(e){e.stopPropagation();var t=e.target._slider;if(t){var o=-e.translationX,r=-e.translationY;s=y+=u?r:o,g=u?Math.abs(y)<Math.abs(-o):Math.abs(y)<Math.abs(-r),e.detail!==e.MSGESTURE_FLAG_INERTIA?(!g||Number(new Date)-c>500)&&(e.preventDefault(),!m&&t.transitions&&(t.vars.animationLoop||(s=y/(0===t.currentSlide&&y<0||t.currentSlide===t.last&&y>0?Math.abs(y)/a+2:1)),t.setProps(i+s,"setTouch"))):setImmediate(function(){n._gesture.stop()})}},!1),n.addEventListener("MSGestureEnd",function(n){n.stopPropagation();var o=n.target._slider;if(o){if(o.animatingTo===o.currentSlide&&!g&&null!==s){var r=v?-s:s,l=r>0?o.getTarget("next"):o.getTarget("prev");o.canAdvance(l)&&(Number(new Date)-c<550&&Math.abs(r)>50||Math.abs(r)>a/2)?o.flexAnimate(l,o.vars.pauseOnAction):m||o.flexAnimate(o.currentSlide,o.vars.pauseOnAction,!0)}e=null,t=null,s=null,i=null,y=0}},!1)):(l=function(s){o.animating?s.preventDefault():(window.navigator.msPointerEnabled||1===s.touches.length)&&(o.pause(),a=u?o.h:o.w,c=Number(new Date),h=s.touches[0].pageX,b=s.touches[0].pageY,i=p&&v&&o.animatingTo===o.last?0:p&&v?o.limit-(o.itemW+o.vars.itemMargin)*o.move*o.animatingTo:p&&o.currentSlide===o.last?o.limit:p?(o.itemW+o.vars.itemMargin)*o.move*o.currentSlide:v?(o.last-o.currentSlide+o.cloneOffset)*a:(o.currentSlide+o.cloneOffset)*a,e=u?b:h,t=u?h:b,n.addEventListener("touchmove",d,!1),n.addEventListener("touchend",f,!1))},d=function(n){h=n.touches[0].pageX,b=n.touches[0].pageY,s=u?e-b:e-h;(!(g=u?Math.abs(s)<Math.abs(h-t):Math.abs(s)<Math.abs(b-t))||Number(new Date)-c>500)&&(n.preventDefault(),!m&&o.transitions&&(o.vars.animationLoop||(s/=0===o.currentSlide&&s<0||o.currentSlide===o.last&&s>0?Math.abs(s)/a+2:1),o.setProps(i+s,"setTouch")))},f=function(r){if(n.removeEventListener("touchmove",d,!1),o.animatingTo===o.currentSlide&&!g&&null!==s){var l=v?-s:s,u=l>0?o.getTarget("next"):o.getTarget("prev");o.canAdvance(u)&&(Number(new Date)-c<550&&Math.abs(l)>50||Math.abs(l)>a/2)?o.flexAnimate(u,o.vars.pauseOnAction):m||o.flexAnimate(o.currentSlide,o.vars.pauseOnAction,!0)}n.removeEventListener("touchend",f,!1),e=null,t=null,s=null,i=null},n.addEventListener("touchstart",l,!1))},resize:function(){!o.animating&&o.is(":visible")&&(p||o.doMath(),m?g.smoothHeight():p?(o.slides.width(o.computedW),o.update(o.pagingCount),o.setProps()):u?(o.viewport.height(o.h),o.setProps(o.h,"setTotal")):(o.vars.smoothHeight&&g.smoothHeight(),o.newSlides.width(o.computedW),o.setProps(o.computedW,"setTotal")))},smoothHeight:function(e){if(!u||m){var t=m?o:o.viewport;e?t.animate({height:o.slides.eq(o.animatingTo).innerHeight()},e):t.innerHeight(o.slides.eq(o.animatingTo).innerHeight())}},sync:function(t){var n=e(o.vars.sync).data("flexslider"),i=o.animatingTo;switch(t){case"animate":n.flexAnimate(i,o.vars.pauseOnAction,!1,!0);break;case"play":n.playing||n.asNav||n.play();break;case"pause":n.pause()}},uniqueID:function(t){return t.filter("[id]").add(t.find("[id]")).each(function(){var t=e(this);t.attr("id",t.attr("id")+"_clone")}),t},pauseInvisible:{visProp:null,init:function(){var e=g.pauseInvisible.getHiddenProp();if(e){var t=e.replace(/[H|h]idden/,"")+"visibilitychange";document.addEventListener(t,function(){g.pauseInvisible.isHidden()?o.startTimeout?clearTimeout(o.startTimeout):o.pause():o.started?o.play():o.vars.initDelay>0?setTimeout(o.play,o.vars.initDelay):o.play()})}},isHidden:function(){var e=g.pauseInvisible.getHiddenProp();return!!e&&document[e]},getHiddenProp:function(){var e=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var t=0;t<e.length;t++)if(e[t]+"Hidden"in document)return e[t]+"Hidden";return null}},setToClearWatchedEvent:function(){clearTimeout(a),a=setTimeout(function(){d=""},3e3)}},o.flexAnimate=function(t,n,i,a,r){if(o.vars.animationLoop||t===o.currentSlide||(o.direction=t>o.currentSlide?"next":"prev"),f&&1===o.pagingCount&&(o.direction=o.currentItem<t?"next":"prev"),!o.animating&&(o.canAdvance(t,r)||i)&&o.is(":visible")){if(f&&a){var l=e(o.vars.asNavFor).data("flexslider");if(o.atEnd=0===t||t===o.count-1,l.flexAnimate(t,!0,!1,!0,r),o.direction=o.currentItem<t?"next":"prev",l.direction=o.direction,Math.ceil((t+1)/o.visible)-1===o.currentSlide||0===t)return o.currentItem=t,o.slides.removeClass(s+"active-slide").eq(t).addClass(s+"active-slide"),!1;o.currentItem=t,o.slides.removeClass(s+"active-slide").eq(t).addClass(s+"active-slide"),t=Math.floor(t/o.visible)}if(o.animating=!0,o.animatingTo=t,n&&o.pause(),o.vars.before(o),o.syncExists&&!r&&g.sync("animate"),o.vars.controlNav&&g.controlNav.active(),p||o.slides.removeClass(s+"active-slide").eq(t).addClass(s+"active-slide"),o.atEnd=0===t||t===o.last,o.vars.directionNav&&g.directionNav.update(),t===o.last&&(o.vars.end(o),o.vars.animationLoop||o.pause()),m)c?(o.slides.eq(o.currentSlide).css({opacity:0,zIndex:1}),o.slides.eq(t).css({opacity:1,zIndex:2}),o.wrapup(y)):(o.slides.eq(o.currentSlide).css({zIndex:1}).animate({opacity:0},o.vars.animationSpeed,o.vars.easing),o.slides.eq(t).css({zIndex:2}).animate({opacity:1},o.vars.animationSpeed,o.vars.easing,o.wrapup));else{var d,h,b,y=u?o.slides.filter(":first").height():o.computedW;p?(d=o.vars.itemMargin,h=(b=(o.itemW+d)*o.move*o.animatingTo)>o.limit&&1!==o.visible?o.limit:b):h=0===o.currentSlide&&t===o.count-1&&o.vars.animationLoop&&"next"!==o.direction?v?(o.count+o.cloneOffset)*y:0:o.currentSlide===o.last&&0===t&&o.vars.animationLoop&&"prev"!==o.direction?v?0:(o.count+1)*y:v?(o.count-1-t+o.cloneOffset)*y:(t+o.cloneOffset)*y,o.setProps(h,"",o.vars.animationSpeed),o.transitions?(o.vars.animationLoop&&o.atEnd||(o.animating=!1,o.currentSlide=o.animatingTo),o.container.unbind("webkitTransitionEnd transitionend"),o.container.bind("webkitTransitionEnd transitionend",function(){clearTimeout(o.ensureAnimationEnd),o.wrapup(y)}),clearTimeout(o.ensureAnimationEnd),o.ensureAnimationEnd=setTimeout(function(){o.wrapup(y)},o.vars.animationSpeed+100)):o.container.animate(o.args,o.vars.animationSpeed,o.vars.easing,function(){o.wrapup(y)})}o.vars.smoothHeight&&g.smoothHeight(o.vars.animationSpeed)}},o.wrapup=function(e){m||p||(0===o.currentSlide&&o.animatingTo===o.last&&o.vars.animationLoop?o.setProps(e,"jumpEnd"):o.currentSlide===o.last&&0===o.animatingTo&&o.vars.animationLoop&&o.setProps(e,"jumpStart")),o.animating=!1,o.currentSlide=o.animatingTo,o.vars.after(o)},o.animateSlides=function(){!o.animating&&t&&o.flexAnimate(o.getTarget("next"))},o.pause=function(){clearInterval(o.animatedSlides),o.animatedSlides=null,o.playing=!1,o.vars.pausePlay&&g.pausePlay.update("play"),o.syncExists&&g.sync("pause")},o.play=function(){o.playing&&clearInterval(o.animatedSlides),o.animatedSlides=o.animatedSlides||setInterval(o.animateSlides,o.vars.slideshowSpeed),o.started=o.playing=!0,o.vars.pausePlay&&g.pausePlay.update("pause"),o.syncExists&&g.sync("play")},o.stop=function(){o.pause(),o.stopped=!0},o.canAdvance=function(e,t){var n=f?o.pagingCount-1:o.last;return!!t||(!(!f||o.currentItem!==o.count-1||0!==e||"prev"!==o.direction)||(!f||0!==o.currentItem||e!==o.pagingCount-1||"next"===o.direction)&&(!(e===o.currentSlide&&!f)&&(!!o.vars.animationLoop||(!o.atEnd||0!==o.currentSlide||e!==n||"next"===o.direction)&&(!o.atEnd||o.currentSlide!==n||0!==e||"next"!==o.direction))))},o.getTarget=function(e){return o.direction=e,"next"===e?o.currentSlide===o.last?0:o.currentSlide+1:0===o.currentSlide?o.last:o.currentSlide-1},o.setProps=function(e,t,n){var i=function(){var n=e||(o.itemW+o.vars.itemMargin)*o.move*o.animatingTo;return-1*function(){if(p)return"setTouch"===t?e:v&&o.animatingTo===o.last?0:v?o.limit-(o.itemW+o.vars.itemMargin)*o.move*o.animatingTo:o.animatingTo===o.last?o.limit:n;switch(t){case"setTotal":return v?(o.count-1-o.currentSlide+o.cloneOffset)*e:(o.currentSlide+o.cloneOffset)*e;case"setTouch":return e;case"jumpEnd":return v?e:o.count*e;case"jumpStart":return v?o.count*e:e;default:return e}}()+"px"}();o.transitions&&(i=u?"translate3d(0,"+i+",0)":"translate3d("+i+",0,0)",n=void 0!==n?n/1e3+"s":"0s",o.container.css("-"+o.pfx+"-transition-duration",n),o.container.css("transition-duration",n)),o.args[o.prop]=i,(o.transitions||void 0===n)&&o.container.css(o.args),o.container.css("transform",i)},o.setup=function(t){if(m)o.slides.css({width:"100%",float:"left",marginRight:"-100%",position:"relative"}),"init"===t&&(c?o.slides.css({opacity:0,display:"block",webkitTransition:"opacity "+o.vars.animationSpeed/1e3+"s ease",zIndex:1}).eq(o.currentSlide).css({opacity:1,zIndex:2}):0==o.vars.fadeFirstSlide?o.slides.css({opacity:0,display:"block",zIndex:1}).eq(o.currentSlide).css({zIndex:2}).css({opacity:1}):o.slides.css({opacity:0,display:"block",zIndex:1}).eq(o.currentSlide).css({zIndex:2}).animate({opacity:1},o.vars.animationSpeed,o.vars.easing)),o.vars.smoothHeight&&g.smoothHeight();else{var n,i;"init"===t&&(o.viewport=e('<div class="'+s+'viewport"></div>').css({overflow:"hidden",position:"relative"}).appendTo(o).append(o.container),o.cloneCount=0,o.cloneOffset=0,v&&(i=e.makeArray(o.slides).reverse(),o.slides=e(i),o.container.empty().append(o.slides))),o.vars.animationLoop&&!p&&(o.cloneCount=2,o.cloneOffset=1,"init"!==t&&o.container.find(".clone").remove(),o.container.append(g.uniqueID(o.slides.first().clone().addClass("clone")).attr("aria-hidden","true")).prepend(g.uniqueID(o.slides.last().clone().addClass("clone")).attr("aria-hidden","true"))),o.newSlides=e(o.vars.selector,o),n=v?o.count-1-o.currentSlide+o.cloneOffset:o.currentSlide+o.cloneOffset,u&&!p?(o.container.height(200*(o.count+o.cloneCount)+"%").css("position","absolute").width("100%"),setTimeout(function(){o.newSlides.css({display:"block"}),o.doMath(),o.viewport.height(o.h),o.setProps(n*o.h,"init")},"init"===t?100:0)):(o.container.width(200*(o.count+o.cloneCount)+"%"),o.setProps(n*o.computedW,"init"),setTimeout(function(){o.doMath(),o.newSlides.css({width:o.computedW,marginRight:o.computedM,float:"left",display:"block"}),o.vars.smoothHeight&&g.smoothHeight()},"init"===t?100:0))}p||o.slides.removeClass(s+"active-slide").eq(o.currentSlide).addClass(s+"active-slide"),o.vars.init(o)},o.doMath=function(){var e=o.slides.first(),t=o.vars.itemMargin,n=o.vars.minItems,i=o.vars.maxItems;o.w=void 0===o.viewport?o.width():o.viewport.width(),o.h=e.height(),o.boxPadding=e.outerWidth()-e.width(),p?(o.itemT=o.vars.itemWidth+t,o.itemM=t,o.minW=n?n*o.itemT:o.w,o.maxW=i?i*o.itemT-t:o.w,o.itemW=o.minW>o.w?(o.w-t*(n-1))/n:o.maxW<o.w?(o.w-t*(i-1))/i:o.vars.itemWidth>o.w?o.w:o.vars.itemWidth,o.visible=Math.floor(o.w/o.itemW),o.move=o.vars.move>0&&o.vars.move<o.visible?o.vars.move:o.visible,o.pagingCount=Math.ceil((o.count-o.visible)/o.move+1),o.last=o.pagingCount-1,o.limit=1===o.pagingCount?0:o.vars.itemWidth>o.w?o.itemW*(o.count-1)+t*(o.count-1):(o.itemW+t)*o.count-o.w-t):(o.itemW=o.w,o.itemM=t,o.pagingCount=o.count,o.last=o.count-1),o.computedW=o.itemW-o.boxPadding,o.computedM=o.itemM},o.update=function(e,t){o.doMath(),p||(e<o.currentSlide?o.currentSlide+=1:e<=o.currentSlide&&0!==e&&(o.currentSlide-=1),o.animatingTo=o.currentSlide),o.vars.controlNav&&!o.manualControls&&("add"===t&&!p||o.pagingCount>o.controlNav.length?g.controlNav.update("add"):("remove"===t&&!p||o.pagingCount<o.controlNav.length)&&(p&&o.currentSlide>o.last&&(o.currentSlide-=1,o.animatingTo-=1),g.controlNav.update("remove",o.last))),o.vars.directionNav&&g.directionNav.update()},o.addSlide=function(t,n){var i=e(t);o.count+=1,o.last=o.count-1,u&&v?void 0!==n?o.slides.eq(o.count-n).after(i):o.container.prepend(i):void 0!==n?o.slides.eq(n).before(i):o.container.append(i),o.update(n,"add"),o.slides=e(o.vars.selector+":not(.clone)",o),o.setup(),o.vars.added(o)},o.removeSlide=function(t){var n=isNaN(t)?o.slides.index(e(t)):t;o.count-=1,o.last=o.count-1,isNaN(t)?e(t,o.slides).remove():u&&v?o.slides.eq(o.last).remove():o.slides.eq(t).remove(),o.doMath(),o.update(n,"remove"),o.slides=e(o.vars.selector+":not(.clone)",o),o.setup(),o.vars.removed(o)},g.init()},e(window).blur(function(e){t=!1}).focus(function(e){t=!0}),e.flexslider.defaults={namespace:"flex-",selector:".slides > li",animation:"fade",easing:"swing",direction:"horizontal",reverse:!1,animationLoop:!0,smoothHeight:!1,startAt:0,slideshow:!0,slideshowSpeed:7e3,animationSpeed:600,initDelay:0,randomize:!1,fadeFirstSlide:!0,thumbCaptions:!1,pauseOnAction:!0,pauseOnHover:!1,pauseInvisible:!0,useCSS:!0,touch:!0,video:!1,controlNav:!0,directionNav:!0,prevText:"Previous",nextText:"Next",keyboard:!0,multipleKeyboard:!1,mousewheel:!1,pausePlay:!1,pauseText:"Pause",playText:"Play",controlsContainer:"",manualControls:"",customDirectionNav:"",sync:"",asNavFor:"",itemWidth:0,itemMargin:0,minItems:1,maxItems:0,move:0,allowOneSlide:!0,start:function(){},before:function(){},after:function(){},end:function(){},added:function(){},removed:function(){},init:function(){}},e.fn.flexslider=function(t){if(void 0===t&&(t={}),"object"==typeof t)return this.each(function(){var n=e(this),i=t.selector?t.selector:".slides > li",o=n.find(i);1===o.length&&!1===t.allowOneSlide||0===o.length?(o.fadeIn(400),t.start&&t.start(n)):void 0===n.data("flexslider")&&new e.flexslider(this,t)});var n=e(this).data("flexslider");switch(t){case"play":n.play();break;case"pause":n.pause();break;case"stop":n.stop();break;case"next":n.flexAnimate(n.getTarget("next"),!0);break;case"prev":case"previous":n.flexAnimate(n.getTarget("prev"),!0);break;default:"number"==typeof t&&n.flexAnimate(t,!0)}}}(jQuery),function(){"use strict";function e(e,t,n){var i=new d(t);switch(e){case"open":i.open(n);break;case"close":i.close(n);break;case"toggle":i.toggle(n);break;default:u.error("Method "+e+" does not exist on jQuery.sidr")}}function t(e){return"status"===e?s:m[e]?m[e].apply(this,Array.prototype.slice.call(arguments,1)):"function"!=typeof e&&"string"!=typeof e&&e?void v.error("Method "+e+" does not exist on jQuery.sidr"):m.toggle.apply(this,arguments)}function n(e,t){if("function"==typeof t.source){var n=t.source(name);e.html(n)}else if("string"==typeof t.source&&r.isUrl(t.source))f.get(t.source,function(t){e.html(t)});else if("string"==typeof t.source){var i="",o=t.source.split(",");if(f.each(o,function(e,t){i+='<div class="sidr-inner">'+f(t).html()+"</div>"}),t.renaming){var a=f("<div />").html(i);a.find("*").each(function(e,t){var n=f(t);r.addPrefixes(n)}),i=a.html()}e.html(i)}else null!==t.source&&f.error("Invalid Sidr Source");return e}var i={};i.classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},i.createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var o,a,s={moving:!1,opened:!1},r={isUrl:function(e){return!!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.?)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i").test(e)},addPrefixes:function(e){this.addPrefix(e,"id"),this.addPrefix(e,"class"),e.removeAttr("style")},addPrefix:function(e,t){var n=e.attr(t);"string"==typeof n&&""!==n&&"sidr-inner"!==n&&e.attr(t,n.replace(/([A-Za-z0-9_.\-]+)/g,"sidr-"+t+"-$1"))},transitions:function(){var e=(document.body||document.documentElement).style,t=!1,n="transition";return n in e?t=!0:function(){var i=["moz","webkit","o","ms"],o=void 0,a=void 0;n=n.charAt(0).toUpperCase()+n.substr(1),t=function(){for(a=0;a<i.length;a++)if((o=i[a])+n in e)return!0;return!1}(),n=t?"-"+o.toLowerCase()+"-"+n.toLowerCase():null}(),{supported:t,property:n}}()},c=jQuery,l="webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend",d=function(){function e(t){i.classCallCheck(this,e),this.name=t,this.item=c("#"+t),this.openClass="sidr"===t?"sidr-open":"sidr-open "+t+"-open",this.menuWidth=this.item.outerWidth(!0),this.speed=this.item.data("speed"),this.side=this.item.data("side"),this.displace=this.item.data("displace"),this.timing=this.item.data("timing"),this.method=this.item.data("method"),this.onOpenCallback=this.item.data("onOpen"),this.onCloseCallback=this.item.data("onClose"),this.onOpenEndCallback=this.item.data("onOpenEnd"),this.onCloseEndCallback=this.item.data("onCloseEnd"),this.body=c(this.item.data("body"))}return i.createClass(e,[{key:"getAnimation",value:function(e,t){var n={},i=this.side;return n[i]="open"===e&&"body"===t?this.menuWidth+"px":"close"===e&&"menu"===t?"-"+this.menuWidth+"px":0,n}},{key:"prepareBody",value:function(e){var t="open"===e?"hidden":"";if(this.body.is("body")){var n=c("html"),i=n.scrollTop();n.css("overflow-x",t).scrollTop(i)}}},{key:"openBody",value:function(){if(this.displace){var e=r.transitions,t=this.body;if(e.supported)t.css(e.property,this.side+" "+this.speed/1e3+"s "+this.timing).css(this.side,0).css({width:t.width(),position:"absolute"}),t.css(this.side,this.menuWidth+"px");else{var n=this.getAnimation("open","body");t.css({width:t.width(),position:"absolute"}).animate(n,{queue:!1,duration:this.speed})}}}},{key:"onCloseBody",value:function(){var e=r.transitions,t={width:"",position:"",right:"",left:""};e.supported&&(t[e.property]=""),this.body.css(t).unbind(l)}},{key:"closeBody",value:function(){var e=this;if(this.displace)if(r.transitions.supported)this.body.css(this.side,0).one(l,function(){e.onCloseBody()});else{var t=this.getAnimation("close","body");this.body.animate(t,{queue:!1,duration:this.speed,complete:function(){e.onCloseBody()}})}}},{key:"moveBody",value:function(e){"open"===e?this.openBody():this.closeBody()}},{key:"onOpenMenu",value:function(e){var t=this.name;s.moving=!1,s.opened=t,this.item.unbind(l),this.body.removeClass("sidr-animating").addClass(this.openClass),this.onOpenEndCallback(),"function"==typeof e&&e(t)}},{key:"openMenu",value:function(e){var t=this,n=this.item;if(r.transitions.supported)n.css(this.side,0).one(l,function(){t.onOpenMenu(e)});else{var i=this.getAnimation("open","menu");n.css("display","block").animate(i,{queue:!1,duration:this.speed,complete:function(){t.onOpenMenu(e)}})}}},{key:"onCloseMenu",value:function(e){this.item.css({left:"",right:""}).unbind(l),c("html").css("overflow-x",""),s.moving=!1,s.opened=!1,this.body.removeClass("sidr-animating").removeClass(this.openClass),this.onCloseEndCallback(),"function"==typeof e&&e(name)}},{key:"closeMenu",value:function(e){var t=this,n=this.item;if(r.transitions.supported)n.css(this.side,"").one(l,function(){t.onCloseMenu(e)});else{var i=this.getAnimation("close","menu");n.animate(i,{queue:!1,duration:this.speed,complete:function(){t.onCloseMenu()}})}}},{key:"moveMenu",value:function(e,t){this.body.addClass("sidr-animating"),"open"===e?this.openMenu(t):this.closeMenu(t)}},{key:"move",value:function(e,t){s.moving=!0,this.prepareBody(e),this.moveBody(e),this.moveMenu(e,t)}},{key:"open",value:function(t){var n=this;s.opened===this.name||s.moving||(!1===s.opened?(this.move("open",t),this.onOpenCallback()):new e(s.opened).close(function(){n.open(t)}))}},{key:"close",value:function(e){s.opened!==this.name||s.moving||(this.move("close",e),this.onCloseCallback())}},{key:"toggle",value:function(e){s.opened===this.name?this.close(e):this.open(e)}}]),e}(),u=jQuery,v=jQuery,p=["open","close","toggle"],m={};for(o=0;o<p.length;o++)m[a=p[o]]=function(t){return function(n,i){"function"==typeof n?(i=n,n="sidr"):n||(n="sidr"),e(t,n,i)}}(a);var f=jQuery;jQuery.sidr=t,jQuery.fn.sidr=function(e){var i=r.transitions,o=f.extend({name:"sidr",speed:200,side:"left",source:null,renaming:!0,body:"body",displace:!0,timing:"ease",method:"toggle",bind:"touchstart click",onOpen:function(){},onClose:function(){},onOpenEnd:function(){},onCloseEnd:function(){}},e),a=o.name,c=f("#"+a);return 0===c.length&&(c=f("<div />").attr("id",a).appendTo(f("body"))),i.supported&&c.css(i.property,o.side+" "+o.speed/1e3+"s "+o.timing),c.addClass("sidr").addClass(o.side).data({speed:o.speed,side:o.side,body:o.body,displace:o.displace,timing:o.timing,method:o.method,onOpen:o.onOpen,onClose:o.onClose,onOpenEnd:o.onOpenEnd,onCloseEnd:o.onCloseEnd}),c=n(c,o),this.each(function(){var e=f(this),n=!1;e.data("sidr")||(s.moving=!1,s.opened=!1,e.data("sidr",a),e.bind(o.bind,function(e){e.preventDefault(),n||(n=!0,t(o.method,a),setTimeout(function(){n=!1},100))}))})}}(),$(document).ready(function(){$(".group-one").delay(1e3).animate({opacity:1},2e3),$(".group-two").delay(2500).animate({opacity:1},1500)}),$(document).ready(function(){function e(e){return"add"==e?"remove":"add"}$(".expandable-toggle").click(function(t){t.preventDefault(),$(this).next().toggleClass("hide");var n=$(this).find(".toggle-icon");n.text(e(n.text()))}),$(".expandable-close").click(function(t){t.preventDefault(),$(this).parents(".expandable-section-body").toggleClass("hide");var n=$(this).parents(".expandable-section-item").find(".toggle-icon");n.text(e(n.text()))})}),$(document).ready(function(){function e(e){$(".hover-list-item-wrapper").each(function(){var t=$(this);"all"==e?t.show():t.hasClass(e)?t.hasClass(e)&&t.show():t.hide()})}$(".impact-filter-options a").click(function(t){t.preventDefault();var n=$(this).data("category");$(".impact-filter-options a").each(function(){$(this).removeClass("active")}),$(this).addClass("active"),e(n)}),$("#impact-filter-select").change(function(){e($(this).val())})}),$(document).ready(function(){$("#mobile-menu").sidr({side:"right",displace:!1}),$(".toggle-submenu").click(function(e){e.preventDefault();var t=$(this);t.next().toggleClass("visible");var n=t.find("i"),i="add"==n.text()?"remove":"add";n.text(i)}),$(".close-menu").click(function(e){e.preventDefault(),$.sidr("close")});var e=$("li.mobile-give-now").nextAll();e.addClass("mobile-utility-menu"),e.first().css("padding-top","30px"),e.last().css("padding-bottom","30px"),$("#sidr").fadeIn(2e3)}),$(document).ready(function(){$(".ui").on("mouseover",".has-tooltip",function(){if($(".tooltip-info").length<=0){var e="",t="";t=$(this).find("label").length>0?$(this).find("label").attr("title"):$(this).find("p").attr("title"),$(this).find("span").not(".required-input").length>0&&((e=$(this).find("span")).append('<span class="tooltip-info">'+t+"</span>"),$(".tooltip-info").css("left",e.width()+70)),$(this).find("p").length>0&&((e=$(this).find("p")).append('<span class="tooltip-info">'+t+"</span>"),$(".tooltip-info").css("left",e.width()+60))}}),$(".ui").on("mouseleave",".has-tooltip",function(){$(".tooltip-info").length>0&&$(".tooltip-info").remove()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
