@inherits avt.ActionForm.Core.ViewModels.FormWebViewPage<avt.ActionForm.Core.ViewModels.Main.ContainerVM>
@using avt.ActionForm
@using avt.ActionForm.Core.ViewModels.Main

@{
    var attributes = NewAttributes();
    AppendClasses(attributes, "field-container af-slide");
    if (!string.IsNullOrWhiteSpace(Model.Field.CssClass))
    {
        AppendClasses(attributes, "form-group-" + Model.Field.FirstCssClass);
    }

    var isLabelTopOrInside = Model.Settings.LabelAlign == eLabelAlign.Top || Model.Settings.LabelAlign == eLabelAlign.Inside;

    if (Model.Field.ColOffset > 0 && (Model.NoLabel || isLabelTopOrInside))
    {
        AppendClasses(attributes, "col-sm-offset-" + Model.Field.ColOffset);
    }

    var colSpan = Model.Field.ColSpan;
    if (!Model.FullSpan && Model.Settings.LabelWidth > 0 && !isLabelTopOrInside && !Model.NoLabel)
    {
        colSpan = Model.Field.ColSpan - Model.Settings.LabelWidth.Value.Value;
    }
    AppendClasses(attributes, "col-sm-" + colSpan);


    if (!string.IsNullOrWhiteSpace(Model.Field.BindShowCompiled) && Model.Field.BindPreserveLayout)
    {
        attributes["ng-style"] = "{ visibility:" + Model.Field.BindShowCompiled + " ? 'visible' : 'hidden' }";
    }

    AppendClasses(attributes, Model.AddClasses);
    AppendRawStyles(attributes, Model.AddStyles);

    if (!string.IsNullOrWhiteSpace(Model.Field.BindShowCompiled))
    {
        attributes["ng-show"] = Model.Field.BindShowCompiled;
    }

    foreach (var attr in Model.Attributes)
    {
        attributes[attr.Key] = attr.Value;
    }
}

<div @ElementAttributes(attributes)>

    @if (!Model.NoLabel && Model.Settings.LabelAlign == eLabelAlign.Top)
    {
        @TemplatePartial("_Label", new FieldLabelVM(Model.BaseId, Model.Settings, Model.Field))
    }

    @TemplatePartial("_FieldRender", FieldRendererVM.InputOnly(Model.Field))

</div>
