[{
    "Id": "SaveFileToDisk",
    "Title": { "default": "Save File" },
    "TypeStr": "DnnSharp.Common.Actions.Documents.SaveFileToDisk, DnnSharp.Common.Actions",
    "HelpText": { "default": "This action allows text, URL or Base64 file contents to be saved to a specified Portal folder. The action also supports providing a path where the file will be saved, specified file name patterns and optional output tokens containing data about the file being saved. We can infer the filename and extension from the Content-Type or Content-Disposition header of the request if it is present and the Filename Pattern parameter is empty." },
    "Settings": {
        "Group": "File Management"
    },
    "Parameters": [{
            "Id": "InputMode",
            "Title": {
                "default": "Content Source"
            },
            "Type": "Select",
            "Settings": {
                "Items": {
                    "Url": { "default": "Url" },
                    "Text": { "default": "Text" },
                    "Base64": { "default": "Base64" }
                }
            },
            "HelpText": {
                "default": "Url: will retrieve the content from the provided Url and save it to the specified file.<br />Text: will write the provided text content to the specified file.<br />Base64: will process the base64 content string (in <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">Data URI Scheme</a> format), e.g. data:image/png;base64,&lt;base64 content&gt; and save the data as image on disk to the specified file. It will enforce file extension if it doesn't match with the metadata in the base64 string."
            }
        },
        {
            "Id": "Url",
            "Title": {
                "default": "Url"
            },
            "Type": "Text",
            "Settings": {
                "ShowCondition": "itemParameters['InputMode'].Value == 'Url'"
            },
            "HelpText": {
                "default": "The URL of the file to be downloaded. A GET request will be made to the URL provided here."
            },
            "Validation": [
                {
                    "Type": "Required"
                }
            ]
        },
        {
            "Id": "Headers",
            "Title": { "default": "Headers" },
            "HelpText": { "default": "Additional HTTP headers to pass. Supports tokens." },
            "Type": "NameValueCollection",
            "Settings": {
                "ShowCondition": "itemParameters['InputMode'].Value == 'Url'",
                "NameColumn": "Name",
                "ValueColumn": "Value",
                "ButtonName": "Add"
            }
        },
        {
            "Id": "Content",
            "Title": { "default": "Content" },
            "HelpText": { "default": "Content of the file. Can contain <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\">My Tokens</a>." },
            "Type": "Code",
            "Settings": {
                "ShowCondition": "itemParameters['InputMode'].Value == 'Text' || itemParameters['InputMode'].Value == 'Base64'"
            },
            "Validation": [
                {
                    "Type": "Required"
                }
            ]
        },
        {
            "Id": "Folder",
            "Title": {
                "default": "Folder"
            },
            "HelpText": {
                "default": "Select the portal folder where the file will be saved."
            },
            "Type": "Select",
            "Settings": {
                "DataSource": "PortalFolderList",
                "SupportsExpressions": "true"
            },
            "Validation": [
                {
                    "Type": "Required"
                }
            ]
        },
        {
            "Id": "Pattern",
            "Title": {
                "default": "Filename Pattern"
            },
            "HelpText": {
                "default": "Optionally provide a pattern to use for filenames on the server. For example &quot;[User:Username]-avatar&quot;. Leave blank to use generate a random name. If no extension is provided, the extension will be derived from the file metdata, if not possible, the .txt extension will be automatically added. Supports <a href=\"http://www.dnnsharp.com/dnn/modules/my-custom-tokens\" target=\"_blank\" tabindex=\"-1\" > My Tokens </a>"
            },
            "Type": "Text"
        },
        {
            "Id": "AllowedExtensions",
            "Title": { "default": "Allowed Extensions" },
            "HelpText": { "default": "Leave empty to allow all available extensions." },
            "Type": "Grid",
            "Settings": {
                "Columns": [{
                    "Id": "MimeType",
                    "Title": {
                        "default": "<Default Extension> (<MIME Type>)"
                    },
                    "Type": "Select",
                    "Settings": {
                        "DataSource": "MimeTypes",
                        "ColSize": "6"
                    }
                }],
                "ShowCondition": "itemParameters['InputMode'].Value == 'Url' || itemParameters['InputMode'].Value == 'Base64'"
            }
        },
        {
            "Id": "Duplicates",
            "Title": {
                "default": "Handle Duplicates"
            },
            "Type": "Select",
            "Settings": {
                "Items": {
                    "Overwrite": {
                        "default": "Overwrite"
                    },
                    "Rename": {
                        "default": "Rename"
                    }
                }
            },
            "DefaultValue": {
                "default": "Rename"
            },
            "Validation": [
                {
                    "Type": "Required"
                }
            ]
        },
        {
            "Id": "AbsoluteURLOutputTokenName",
            "Title": {
                "default": "Absolute URL Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the Absolute URL."
            },
            "Type": "Text"
        },
        {
            "Id": "RelativeURLOutputTokenName",
            "Title": {
                "default": "Relative URL Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the Relative URL."
            },
            "Type": "Text"
        },
        {
            "Id": "PhysicalPathOutputTokenName",
            "Title": {
                "default": "Physical Path Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the Physical Path."
            },
            "Type": "Text"
        },
        {
            "Id": "LinkClickOutputTokenName",
            "Title": {
                "default": "Link Click Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the LinkClick Url."
            },
            "Type": "Text"
        },
        {
            "Id": "FileIdOutputTokenName",
            "Title": {
                "default": "File Id Output Token Name"
            },
            "HelpText": {
                "default": "Optionally provide a token name where to Store the File Id."
            },
            "Type": "Text"
        }
    ]
}]